#include <DHT.h>
#include <SPI.h>
#include <ESP8266mDNS.h>
#include <ESP8266WiFi.h>
#include <WiFiClient.h>
#include <ESP8266WebServer.h>



#define DHTPIN D2
#define DHTTYPE DHT11
int sensorpin=A0;
int outputvalue;
DHT dht(DHTPIN,DHTTYPE);
float humidityData;
float temperatureData;
const char* ssid="vivo 1917";
const char* password = "sathis2k";
char server[]="api.thingspeak.com";

WiFiClient client;

void setup()
{
  Serial.begin(115200);
  delay(10);
  dht.begin();
  Serial.println();
  Serial.println();
  Serial.print("Connecting to");
  Serial.println(ssid);
  WiFi.begin(ssid,password);

  while (WiFi.status() != WL_CONNECTED){
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.println("WiFi connected");

  Serial.println("Server started");
  Serial.print(WiFi.localIP());
  delay(1000);
  Serial.println("connecting...");
 }
void loop()
{
  humidityData = dht.readHumidity();
  temperatureData = dht.readTemperature();
  outputvalue=analogRead(sensorpin);
  outputvalue=map(outputvalue,550,0,0,100);
  Sending_To_thingspeak();
  delay(30000);
}
void Sending_To_thingspeak()
{
  if(client.connect(server,80)) {
    Serial.println("connected");
    Serial.print("GET /update?api_key=F0SMXTBDLSMV1GQW&field1=");
    client.print("GET /update?api_key=F0SMXTBDLSMV1GQW&field1=");
    Serial.println(humidityData);
    client.print(humidityData);
    client.print("&field2=");
    Serial.println("&field2=");
    client.print(temperatureData);
    Serial.println(temperatureData);
    client.print("&field3=");
    Serial.println("&field3=");
    client.print(outputvalue);
    Serial.println(outputvalue);
    client.print("");
    client.print("HTTP/1.1");
    client.println();
    client.println("Host:api.thingspeak.com");
    client.println("Connection: close");
    client.println();
  }else {
    Serial.println("connection failed");
  }
}
